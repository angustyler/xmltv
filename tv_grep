#!/usr/bin/perl -w
#
# tv_grep: filter out all programmes matching a regexp.  The channels
# are left unchanged.
#
# This is the first version, many features yet to implement!
#
use strict;
use XMLTV;
use Data::Dumper;
use Getopt::Long;

sub usage();

my $ignore_case = 0;
# Kludge to allow a mixture of short and long options.  Will break if
# one day things like '-i' are acceptable as arguments to other
# options.
#
my %long = ('-i' => '--ignore-case');
foreach (@ARGV) {
    last if $_ eq '--';
    if (defined $long{$_}) { $_ = $long{$_} }
}
GetOptions('ignore-case' => \$ignore_case);

usage() unless 1 <= @ARGV and @ARGV < 3;
my $pattern = shift;

my $filename = @ARGV ? $ARGV[0] : '-';
my ($encoding, $credits, $ch, $progs) = @{XMLTV::read_data($filename)};
if ($ignore_case) {
    @$progs = grep { (my $tmp = Dumper($_)) =~ /$pattern/io } @$progs;
}
else {
    @$progs = grep { (my $tmp = Dumper($_)) =~ /$pattern/o } @$progs;
}
XMLTV::write_data([$encoding, $credits, $ch, $progs]);


sub usage() {
    print STDERR "usage: $0 [--ignore-case|-i] pattern [filename]\n";
    exit(1);
}
