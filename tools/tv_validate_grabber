#!/usr/bin/perl -w

use strict;

use File::Temp qw/tmpnam/;

use XMLTV::ValidateFile qw/LoadDtd/;
use XMLTV::ValidateGrabber qw/ValidateGrabber ConfigureGrabber/;
if( scalar( @ARGV ) < 2 or scalar( @ARGV ) > 3 )
{
    print << "EOHELP";
Usage: $0 <grabbercommand> <dtdfile> [configfile]

EOHELP

    exit 1;
}

my( $cmd, $dtd_file, $configfile ) = @ARGV;

my $cfg;
if( defined( $configfile ) )
{
    $cfg = $configfile;
}
else
{
    $cfg = tmpnam();
}

if( not -e $cfg )
{
    ConfigureGrabber( $cmd, $cfg );
}

LoadDtd( $dtd_file );

my $opdir  = tmpnam();
mkdir $opdir;
my $errors = ValidateGrabber( $cmd, $cfg, "$opdir/t_", undef, 0, 1 );

if( not defined( $configfile ) )
{
    unlink $cfg;
}

if( $errors ) {
    print "$errors errors found.\n";
    exit 1;
} else {
    print "Validated ok.\n";
    exit 0;
}
   
=head1 COPYRIGHT

Copyright (C) 2005 Mattias Holmlund.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

=cut

### Setup indentation in Emacs
## Local Variables:
## perl-indent-level: 4
## perl-continued-statement-offset: 4
## perl-continued-brace-offset: 0
## perl-brace-offset: -4
## perl-brace-imaginary-offset: 0
## perl-label-offset: -2
## cperl-indent-level: 4
## cperl-brace-offset: 0
## cperl-continued-brace-offset: 0
## cperl-label-offset: -2
## cperl-extra-newline-before-brace: t
## cperl-merge-trailing-else: nil
## cperl-continued-statement-offset: 2
## indent-tabs-mode: t
## End:
